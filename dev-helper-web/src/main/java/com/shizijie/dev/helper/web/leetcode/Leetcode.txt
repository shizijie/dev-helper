数据结构：
    1.数组 - Array
    2.链表 - LinkedList
    3.队列 - Queue
    4.栈   - Stack
    5.哈希表 - Hash Table
    6.堆   - Heap
    7.树 - Tree
    8.图 - Graph
    9.集合 - Set
    10.前缀树 - Trie

算法：
    1.双指针：
        1.普通双指针：两个指针往同一个方向移动
        2.对撞双指针：两个指针面对面移动
        3.快慢双指针：慢指针+快指针

        1，141，881

    2.二分查找法（前提一定要有序）O(logN）

        704，35，162，74

    3.滑动窗口（减少while循环）

        209，1456

    4.递归
        四个要素：
            1.接收的参数
            2.返回值
            3.终止的条件
            4.递归拆解：如果递归下一层

        509，206，344

    5.分治法（分解-合并）

        169，53，215

    6.回溯法（类似枚举，一层一层向下递归，尝试搜索答案）（dfs+剪枝）

        22，78，77，46

    7.深度优先搜索算法dfs（从root结果开始，尽可能搜索一个分支，再去看下一个分支）
        1.二叉树搜索
        2.图搜索

        938，78，200

    8.广度优先搜索算法bfs（层层递进，一层一层遍历）
        1.二叉树搜索
        2.图搜索

        102，107，200

    9.并查集 union find
    （unioan(x,y)：合并两个元素为同一个根节点，find(x)：找到某个元素的根节点）
        200，547

    10.贪心算法 greedy（每一步做出的选择都是当前看起来最好的选择）
        322，1217，55

    11.记忆化搜索（减少重复计算）
        斐波那契
        509，322

    12.动态规划 dynamic programming（计数，求最值，求存在性）
       三要素：1.初始状态
              2.方程式
              3.终止状态
       509，62，121，70，279，221




